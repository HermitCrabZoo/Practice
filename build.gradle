/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.6/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}
//eclipse插件  
apply plugin: 'eclipse'

apply plugin: "me.champeau.gradle.jmh"

//JDK11
sourceCompatibility = 1.11
//版本号  
version = '1.0'

//下载源码
eclipse {
	classpath {
		downloadSources=true
	}
}

//由于有些子依赖可能在运行时用不到,true代表下载子依赖，false代表不下载子依赖
configurations.all {
    transitive = true
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api:与compile功能完全相同(compile已被新版本抛弃)
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation:依赖库变动的话只会影响、重新编译到当前库，不会影响到其他，因此编译速度会提高
    implementation 'com.google.guava:guava:23.0'

    //jmh
    implementation 'org.openjdk.jmh:jmh-core:1.21'
    implementation 'org.openjdk.jmh:jmh-generator-annprocess:1.21'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-core:1.3'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'

    compile fileTree(dir: 'lib', include: ['*.jar'])

    api 'junit:junit:4.12'
    api 'commons-io:commons-io:2.6'
    api 'commons-logging:commons-logging:1.2'
    api 'commons-net:commons-net:3.6'
    api 'org.apache.commons:commons-configuration2:2.2'
    api 'com.jcraft:jsch:0.1.54'
    api 'ch.ethz.ganymed:ganymed-ssh2:262'
    //api 'org.apache.hadoop:hadoop-core:1.2.1'
    //api 'org.apache.hive:hive-exec:2.3.3'
    api 'net.sourceforge.jexcelapi:jxl:2.6.12'

    api 'org.apache.lucene:lucene-core:7.3.1'
    api 'org.apache.lucene:lucene-queryparser:7.3.1'
    api 'org.apache.lucene:lucene-analyzers-common:7.3.1'
    api 'org.apache.lucene:lucene-analyzers-smartcn:7.3.1'
    api 'com.github.magese:ik-analyzer-solr7:7.x'

    api 'redis.clients:jedis:2.9.0'
    api 'org.apache.commons:commons-pool2:2.4.2'

    //kafka
    api 'org.apache.kafka:kafka_2.12:1.1.1'

    //cpdetector部分
    api 'net.sourceforge.jchardet:jchardet:1.0'
    api 'antlr:antlr:2.7.7'

    //hadoop
    //api 'org.apache.hadoop:hadoop-core:1.2.1'

    api 'org.apache.hadoop:hadoop-hdfs:3.2.0'
    api 'org.apache.hadoop:hadoop-mapreduce-client-core:3.2.0'
    api 'org.apache.hadoop:hadoop-common:3.2.0'
    api 'org.apache.hadoop:hadoop-auth:3.2.0'

    //取代commons-httpclient
    api 'org.apache.httpcomponents:httpclient:4.5.6'


}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"//编译参数:未检查,过期API
}

//将依赖一同打包进项目生成的jar文件里
jar {
    manifest {
        attributes(
                "Manifest-Version": 1.0,
        )
    }
    //依赖打包进来
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}


//执行release将项目单独打包进jar,将依赖打包到同目录下的lib下,并且将依赖信息生成到项目生成的jar文件里的Manifest文件中
/*
jar {
    String someString = ''
    configurations.runtime.each {someString = someString + " lib//"+it.name}
    manifest {
        attributes 'Class-Path': someString
        attributes(
        	//"Main-Class": "com.zoo.Main"//程序入口
        	'Class-Path': configurations.compile.collect { "lib/${it.name}" }.join(' ')
        )
    }
}

task clearJar(type: Delete) {
    delete 'build/libs/lib'
}

task copyJar(type: Copy) {
    from configurations.runtime
    into('build/libs/lib')
}

task release(type: Copy, dependsOn: [assemble, clearJar, copyJar])
*/
